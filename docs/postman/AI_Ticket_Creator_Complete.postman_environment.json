{
	"id": "ai-ticket-creator-complete-env",
	"name": "AI Ticket Creator - Complete (Latest Architecture)",
	"values": [
		{
			"key": "BASE_URL",
			"value": "http://localhost:8000",
			"type": "default",
			"enabled": true,
			"description": "Base URL for the AI Ticket Creator API - change to production URL when needed"
		},
		{
			"key": "MCP_URL",
			"value": "http://localhost:8001",
			"type": "default",
			"enabled": true,
			"description": "MCP Server URL for tool integration and AI context processing"
		},
		{
			"key": "USER_EMAIL",
			"value": "admin@company.com",
			"type": "default",
			"enabled": true,
			"description": "User email for login - update with your test user email"
		},
		{
			"key": "USER_PASSWORD",
			"value": "SecurePass123",
			"type": "secret",
			"enabled": true,
			"description": "User password for login - update with your test user password"
		},
		{
			"key": "USER_FULL_NAME",
			"value": "Admin User",
			"type": "default",
			"enabled": true,
			"description": "Full name for user registration - used in user creation requests"
		},
		{
			"key": "ORGANIZATION_NAME",
			"value": "Acme Corporation",
			"type": "default",
			"enabled": true,
			"description": "Organization name for registration - creates new org if doesn't exist"
		},
		{
			"key": "CLERK_JWT_TOKEN",
			"value": "",
			"type": "secret",
			"enabled": true,
			"description": "Clerk JWT token from frontend - get via: await window.Clerk.session.getToken() in browser console"
		},
		{
			"key": "API_KEY",
			"value": "",
			"type": "secret",
			"enabled": true,
			"description": "Long-lived API key for Postman testing (generated from Clerk JWT) - used for all API requests"
		},
		{
			"key": "ACCESS_TOKEN",
			"value": "",
			"type": "secret",
			"enabled": true,
			"description": "Current access token (either Clerk JWT or API key) - automatically populated"
		},
		{
			"key": "API_TOKEN_ID",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "API token ID for token management operations"
		},
		{
			"key": "USER_ID",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "Current user ID (populated after login) - used in user-specific endpoints"
		},
		{
			"key": "ORGANIZATION_ID",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "Current organization ID (populated after login) - used in org-specific endpoints"
		},
		{
			"key": "AGENT_ID",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "Primary agent ID (set after creating first agent) - used in agent-specific requests"
		},
		{
			"key": "SECOND_AGENT_ID",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "Second agent ID for multi-agent testing scenarios"
		},
		{
			"key": "SUPPORT_AGENT_ID",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "Customer support agent ID - auto-populated when creating support agents"
		},
		{
			"key": "SALES_AGENT_ID",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "Sales agent ID - for testing sales-specific workflows"
		},
		{
			"key": "TECH_AGENT_ID",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "Technical support agent ID - for testing technical support scenarios"
		},
		{
			"key": "TICKET_ID",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "Sample ticket ID for testing (set after creating a ticket) - used in ticket operations"
		},
		{
			"key": "INTEGRATION_ID",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "Sample integration ID for testing (set after creating integration) - used in integration operations"
		},
		{
			"key": "THREAD_ID",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "Chat thread ID (automatically populated after creating thread) - used in chat operations"
		},
		{
			"key": "TEST_EMAIL",
			"value": "test@example.com",
			"type": "default",
			"enabled": true,
			"description": "Email for testing email availability check - change to test different emails"
		},
		{
			"key": "JIRA_URL",
			"value": "https://company.atlassian.net",
			"type": "default",
			"enabled": true,
			"description": "JIRA instance URL for integration testing - update with your JIRA URL"
		},
		{
			"key": "JIRA_EMAIL",
			"value": "service@company.com",
			"type": "default",
			"enabled": true,
			"description": "JIRA email for API authentication - update with your JIRA service account email"
		},
		{
			"key": "JIRA_API_TOKEN",
			"value": "ATATT3xFfGF0T8_YOUR_TOKEN_HERE",
			"type": "secret",
			"enabled": true,
			"description": "JIRA API token for integration - generate from Atlassian Account Settings"
		},
		{
			"key": "JIRA_PROJECT_KEY",
			"value": "SUP",
			"type": "default",
			"enabled": true,
			"description": "JIRA project key for tickets - update with your project key (e.g., SUP, HELP, etc.)"
		},
		{
			"key": "JIRA_ISSUE_TYPE",
			"value": "Task",
			"type": "default",
			"enabled": true,
			"description": "Default JIRA issue type for ticket creation"
		},
		{
			"key": "SALESFORCE_INSTANCE_URL",
			"value": "https://company.my.salesforce.com",
			"type": "default",
			"enabled": true,
			"description": "Salesforce instance URL - update with your Salesforce domain"
		},
		{
			"key": "SALESFORCE_USERNAME",
			"value": "integration@company.com",
			"type": "default",
			"enabled": true,
			"description": "Salesforce username for integration - use service account recommended"
		},
		{
			"key": "SALESFORCE_PASSWORD",
			"value": "YourPassword123",
			"type": "secret",
			"enabled": true,
			"description": "Salesforce password for integration"
		},
		{
			"key": "SALESFORCE_SECURITY_TOKEN",
			"value": "ABC123DEF456GHI789",
			"type": "secret",
			"enabled": true,
			"description": "Salesforce security token - get from Setup > My Personal Information > Reset Security Token"
		},
		{
			"key": "SALESFORCE_CLIENT_ID",
			"value": "3MVG9_YOUR_CLIENT_ID_HERE",
			"type": "secret",
			"enabled": true,
			"description": "Salesforce connected app client ID - create connected app in Salesforce Setup"
		},
		{
			"key": "SALESFORCE_CLIENT_SECRET",
			"value": "1234567890_YOUR_CLIENT_SECRET_HERE",
			"type": "secret",
			"enabled": true,
			"description": "Salesforce connected app client secret"
		},
		{
			"key": "INTEGRATION_NAME",
			"value": "jira",
			"type": "default",
			"enabled": true,
			"description": "Integration name for ticket creation testing - used in active integrations filtering"
		},
		{
			"key": "CATEGORY_FILTER",
			"value": "technical",
			"type": "default",
			"enabled": true,
			"description": "Category filter for active integrations endpoint - test with different categories"
		},
		{
			"key": "INTEGRATION_TYPE_FILTER",
			"value": "ticketing",
			"type": "default",
			"enabled": true,
			"description": "Integration category filter - options: ticketing, crm, messaging, communication, etc."
		},
		{
			"key": "MEMBER_EMAIL",
			"value": "newmember@company.com",
			"type": "default",
			"enabled": true,
			"description": "Email for member invitation testing - update to test member invitations"
		},
		{
			"key": "MEMBER_ID",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "Member ID for member management operations - populated after member operations"
		},
		{
			"key": "INVITATION_TOKEN",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "Invitation token for testing invitation acceptance - from invitation emails"
		},
		{
			"key": "FILE_ID",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "File ID for testing file attachments and processing"
		},
		{
			"key": "AVATAR_SIZE",
			"value": "medium",
			"type": "default",
			"enabled": true,
			"description": "Avatar size for testing - options: small, medium, large, original"
		},
		{
			"key": "TICKET_PRIORITY",
			"value": "high",
			"type": "default",
			"enabled": true,
			"description": "Default ticket priority for testing - options: low, medium, high, critical"
		},
		{
			"key": "TICKET_CATEGORY",
			"value": "technical",
			"type": "default",
			"enabled": true,
			"description": "Default ticket category for testing - options: technical, billing, bug, feature_request, etc."
		},
		{
			"key": "TICKET_STATUS",
			"value": "open",
			"type": "default",
			"enabled": true,
			"description": "Default ticket status for filtering - options: new, open, in_progress, pending, resolved, closed"
		},
		{
			"key": "AGENT_TYPE",
			"value": "customer_support",
			"type": "default",
			"enabled": true,
			"description": "Default agent type for testing - options: customer_support, sales, technical, general"
		},
		{
			"key": "COMMUNICATION_STYLE",
			"value": "professional",
			"type": "default",
			"enabled": true,
			"description": "Agent communication style - options: professional, casual, friendly, formal"
		},
		{
			"key": "RESPONSE_LENGTH",
			"value": "moderate",
			"type": "default",
			"enabled": true,
			"description": "Agent response length preference - options: brief, moderate, detailed, comprehensive"
		},
		{
			"key": "MEMORY_RETENTION",
			"value": "10",
			"type": "default",
			"enabled": true,
			"description": "Agent memory retention (number of messages) - range: 1-20"
		},
		{
			"key": "MAX_CONTEXT_SIZE",
			"value": "50000",
			"type": "default",
			"enabled": true,
			"description": "Agent max context size in tokens - range: 1000-1000000"
		},
		{
			"key": "TIMEOUT_SECONDS",
			"value": "30",
			"type": "default",
			"enabled": true,
			"description": "Agent timeout in seconds - range: 1-300"
		},
		{
			"key": "TEST_MESSAGE",
			"value": "Hello! I need help with my account. Can you assist me?",
			"type": "default",
			"enabled": true,
			"description": "Test message for chat system testing"
		},
		{
			"key": "THREAD_TITLE",
			"value": "Customer Support Inquiry",
			"type": "default",
			"enabled": true,
			"description": "Default thread title for chat testing"
		},
		{
			"key": "SEARCH_QUERY",
			"value": "bug",
			"type": "default",
			"enabled": true,
			"description": "Search query for testing search and filtering functionality"
		},
		{
			"key": "PAGE_SIZE",
			"value": "20",
			"type": "default",
			"enabled": true,
			"description": "Default page size for pagination testing - adjust based on needs"
		},
		{
			"key": "SORT_BY",
			"value": "created_at",
			"type": "default",
			"enabled": true,
			"description": "Default sort field for testing - options vary by endpoint"
		},
		{
			"key": "SORT_ORDER",
			"value": "desc",
			"type": "default",
			"enabled": true,
			"description": "Default sort order - options: asc, desc"
		},
		{
			"key": "WEBHOOK_URL",
			"value": "https://api.company.com/webhooks/tickaido",
			"type": "default",
			"enabled": true,
			"description": "Webhook URL for integration testing - update with your webhook endpoint"
		},
		{
			"key": "WEBHOOK_SECRET",
			"value": "webhook_secret_key_123",
			"type": "secret",
			"enabled": true,
			"description": "Webhook secret for validating webhook payloads"
		},
		{
			"key": "RATE_LIMIT_PER_HOUR",
			"value": "1000",
			"type": "default",
			"enabled": true,
			"description": "Rate limit per hour for integration testing"
		},
		{
			"key": "SYNC_FREQUENCY_MINUTES",
			"value": "30",
			"type": "default",
			"enabled": true,
			"description": "Sync frequency in minutes for integration testing"
		},
		{
			"key": "ENVIRONMENT",
			"value": "development",
			"type": "default",
			"enabled": true,
			"description": "Environment setting - options: development, staging, production"
		},
		{
			"key": "REGION",
			"value": "us-east-1",
			"type": "default",
			"enabled": true,
			"description": "Region setting for cloud services"
		},
		{
			"key": "API_VERSION",
			"value": "v1",
			"type": "default",
			"enabled": true,
			"description": "API version for testing version-specific endpoints"
		}
	],
	"_postman_variable_scope": "environment",
	"_postman_exported_at": "2025-01-15T10:30:00.000Z",
	"_postman_exported_using": "Claude Code AI Assistant - Latest Architecture Update"
}