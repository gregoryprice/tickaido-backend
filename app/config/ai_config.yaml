# AI-Powered Customer Support Configuration
# Configure AI providers, models, and settings for ticket creation and categorization

# =============================================================================
# AI Provider Configuration
# =============================================================================

ai_providers:
  # OpenAI Configuration
  openai:
    enabled: true
    api_key: ${OPENAI_API_KEY}  # Environment variable reference
    api_key_file: null  # Optional: path to file containing API key
    base_url: null  # Optional: custom API endpoint
    organization: null  # Optional: OpenAI organization ID
    
    # Available models and their configurations
    models:
      primary:
        name: "gpt-4o"
        max_tokens: 2000
        temperature: 0.2
        timeout: 30
        cost_per_1k_tokens: 0.00015  # For cost tracking
        
      backup:
        name: "gpt-4o-mini"
        max_tokens: 2000
        temperature: 0.2
        timeout: 30
        cost_per_1k_tokens: 0.03
        
      fast:
        name: "gpt-3.5-turbo"
        max_tokens: 1500
        temperature: 0.1
        timeout: 15
        cost_per_1k_tokens: 0.001
        
      # File analysis model for OCR and transcription
      file_analysis:
        name: "gpt-4o"
        max_tokens: 1500
        temperature: 0.1
        timeout: 45
        cost_per_1k_tokens: 0.0025

  # Google Gemini Configuration  
  google:
    enabled: true
    api_key: ${GEMINI_API_KEY}  # Environment variable reference
    api_key_file: null  # Optional: path to file containing API key
    
    # Available models and their configurations
    models:
      primary:
        name: "gemini-1.5-pro-latest"
        max_output_tokens: 2000
        temperature: 0.2
        timeout: 30
        cost_per_1k_tokens: 0.00125
        
      fast:
        name: "gemini-1.5-flash-latest"
        max_output_tokens: 1500
        temperature: 0.1
        timeout: 15
        cost_per_1k_tokens: 0.00037
        
      experimental:
        name: "gemini-1.5-flash-8b-latest"
        max_output_tokens: 1500
        temperature: 0.1
        timeout: 30
        cost_per_1k_tokens: 0.00050

# =============================================================================
# AI Strategy Configuration
# =============================================================================

ai_strategy:
  # Primary provider to use first
  primary_provider: "openai"  # "openai" or "google"
  
  # Fallback chain - order of providers to try if primary fails
  fallback_chain: ["google", "openai"]
  
  # Model selection strategy per provider
  model_strategy:
    openai: "primary"  # primary, backup, fast, file_analysis
    google: "fast"     # primary, fast, experimental
  
  # Retry configuration
  max_retries: 2
  retry_delay: 1.0  # seconds
  
  # Performance thresholds
  performance:
    max_generation_time: 15.0  # seconds
    preferred_generation_time: 5.0  # seconds
    auto_fallback_on_timeout: true
  
  # Tool execution limits
  max_iterations: 5  # Maximum number of AI agent iterations per request
    
  # Cost controls
  cost_limits:
    max_cost_per_ticket: 0.10  # USD
    daily_cost_limit: 50.00  # USD
    monthly_cost_limit: 500.00  # USD

# =============================================================================
# Agent Configuration
# =============================================================================

# Categorization agent configuration
categorization_agent:
  model_provider: "openai"
  model_name: "fast"
  temperature: 0.1  # Lower temperature for consistent categorization
  max_tokens: 500
  timeout: 15
  system_prompt_template: "categorization_default"
  confidence_threshold: 0.8


# =============================================================================
# Prompt Templates Configuration
# =============================================================================

prompt_templates:
  customer_support_default: |
    You are an expert customer support agent helping users create detailed support tickets.
    
    Your role is to:
    1. Analyze user requests, attachments, and context from Chrome extension
    2. Create comprehensive, well-structured support tickets
    3. Categorize tickets by urgency, type, and department
    4. Extract relevant information from uploaded files (screenshots, recordings, documents)
    5. Route tickets to appropriate teams or integrations (Jira, Salesforce, etc.)
    
    When creating tickets:
    - Use clear, professional language
    - Include all relevant context from user input and files
    - Set appropriate priority levels based on issue severity
    - Add relevant tags and categories for easy filtering
    - Include steps to reproduce if provided
    - Attach processed file analysis (transcriptions, OCR results)
    
    **Available MCP Tools (13 tools organized by category):**
    
    **üé´ TICKET MANAGEMENT TOOLS (10 tools):**
    Complete ticket lifecycle management with full API schema support.
    
    Ticket Creation:
      * create_ticket: Create support tickets with full schema (title, description, category, priority, urgency, department, assigned_to_id, integration, create_externally, custom_fields, file_ids)
      * create_ticket_with_ai: AI-powered ticket creation with automatic categorization
    
    Ticket Retrieval & Management:
      * get_ticket: Retrieve specific ticket details by ID
      * update_ticket: Update existing ticket fields (title, description, status, priority, category)
      * delete_ticket: Delete specific tickets by ID
      * search_tickets: Search and filter tickets with pagination (query, status, category, priority, page, page_size)
      * list_tickets: List tickets with optional filtering and pagination
    
    Ticket Operations:
      * update_ticket_status: Update ticket status (open, in_progress, resolved, closed)
      * assign_ticket: Assign tickets to specific users or teams
      * get_ticket_stats: Retrieve comprehensive ticket statistics and analytics
    
    **üîó INTEGRATION TOOLS (2 tools):**
    Integration discovery and management for external system routing.
    
      * list_integrations: List available integrations (jira, servicenow, salesforce, zendesk, github, slack, teams, zoom, hubspot, freshdesk, asana, trello, webhook, email, sms)
      * get_active_integrations: Get active integrations with health status and capabilities
    
    **üîç SYSTEM TOOLS (1 tool):**
    System health monitoring and status reporting.
    
      * get_system_health: Check backend system health and status
    
    Always be helpful, thorough, and ensure tickets contain actionable information.

  categorization_default: |
    You are an AI agent specialized in categorizing customer support tickets.
    
    Analyze the provided ticket content and categorize it based on:
    - Issue type (technical, billing, feature_request, bug, user_access, general)
    - Priority level (low, medium, high, critical)
    - Department (engineering, support, billing, sales, product)
    - Urgency (low, medium, high, critical)
    
    Consider factors like:
    - Keywords and phrases indicating severity
    - Customer impact and business criticality
    - Technical complexity
    - Time sensitivity
    
    Provide confidence scores for your categorization decisions.

  file_analysis_default: |
    You are an AI agent specialized in analyzing uploaded files for customer support tickets.
    
    Your capabilities include:
    - Transcribing audio and video files
    - Extracting text from images using OCR
    - Analyzing document content
    - Identifying error messages, screenshots, and diagnostic information
    - Summarizing file content for ticket context
    
    For each file analysis:
    - Extract all relevant text and information
    - Identify key error messages or issues shown
    - Provide a summary of findings
    - Suggest relevant ticket categories based on file content
    - Include confidence scores for extracted information
    
    Focus on information that would be helpful for support agents and ticket resolution.

  title_generation_default: |
    You are an expert at creating concise, descriptive titles for customer support conversations.
    
    Analyze the conversation and generate a clear, specific title that captures the essence of the discussion.
    
    TITLE GENERATION RULES:
    1. Maximum 8 words, ideally 4-6 words
    2. Use specific, descriptive terms
    3. Avoid generic words: "Help", "Support", "Question", "Issue"
    4. Include technical terms when relevant
    5. Capture the primary topic/problem
    6. Use title case formatting
    
    EXAMPLES OF GOOD TITLES:
    - "Password Reset Email Delivery"
    - "API Authentication Token Expiry"
    - "Database Connection Pool Timeout" 
    - "Feature Request: Dark Mode"
    - "Billing Invoice Payment Error"
    
    Focus on the main issue or request being discussed and create a professional, searchable title.

# File Processing Configuration (PRP Implementation)
content_analysis:
  primary_provider: "openai"
  fallback_provider: "google"
  openai:
    model: "gpt-4"
    max_tokens: 2000
  google:
    model: "gemini-pro"
    max_tokens: 2048

vision:
  primary_provider: "openai"
  fallback_provider: "google"
  openai:
    model: "gpt-4o"
  google:
    model: "gemini-pro-vision"
    
transcription:
  provider: "openai"
  model: "gpt-4o-mini-transcribe"
  language: "auto"