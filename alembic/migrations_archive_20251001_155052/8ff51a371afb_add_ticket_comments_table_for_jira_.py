"""add_ticket_comments_table_for_jira_integration

Revision ID: 8ff51a371afb
Revises: db23781d1fd2
Create Date: 2025-09-30 16:50:14.648561

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8ff51a371afb'
down_revision = 'db23781d1fd2'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # Create ticket_comments table for enhanced Jira integration
    op.create_table('ticket_comments',
        sa.Column('id', postgresql.UUID(as_uuid=True), 
                 server_default=sa.text('gen_random_uuid()'), 
                 nullable=False,
                 comment='Primary key for comment'),
        sa.Column('created_at', sa.DateTime(timezone=True), 
                 server_default=sa.text('NOW()'), 
                 nullable=False,
                 comment='Timestamp when comment was created'),
        sa.Column('updated_at', sa.DateTime(timezone=True), 
                 server_default=sa.text('NOW()'), 
                 nullable=False,
                 comment='Timestamp when comment was last updated'),
        sa.Column('ticket_id', postgresql.UUID(as_uuid=True), 
                 nullable=False,
                 comment='Reference to parent ticket'),
        sa.Column('jira_comment_id', sa.Text(), 
                 nullable=True,
                 comment='External Jira comment ID for synchronization'),
        sa.Column('author_email', sa.Text(), 
                 nullable=False,
                 comment='Email address of comment author'),
        sa.Column('author_display_name', sa.Text(), 
                 nullable=True,
                 comment='Display name of comment author'),
        sa.Column('body', postgresql.JSONB(astext_type=sa.Text()), 
                 nullable=False,
                 comment='Comment content in ADF (Atlassian Document Format)'),
        sa.Column('is_internal', sa.Boolean(), 
                 server_default=sa.text('false'), 
                 nullable=False,
                 comment='Whether comment is internal-only or visible to customers'),
        # BaseModel inherited fields
        sa.Column('notes', sa.Text(),
                 nullable=True,
                 comment='Internal notes'),
        sa.Column('extra_metadata', sa.Text(),
                 nullable=True,
                 comment='JSON metadata storage'),
        sa.Column('deleted_at', sa.DateTime(timezone=True),
                 nullable=True,
                 comment='Soft delete timestamp - NULL means not deleted'),
        sa.ForeignKeyConstraint(['ticket_id'], ['tickets.id'], 
                               ondelete='CASCADE',
                               name='fk_ticket_comments_ticket_id'),
        sa.PrimaryKeyConstraint('id', name='pk_ticket_comments'),
        comment='Comments on support tickets with Jira integration support'
    )
    
    # Create indexes for efficient queries
    op.create_index('idx_ticket_comments_ticket_id', 'ticket_comments', ['ticket_id'], unique=False)
    op.create_index('idx_ticket_comments_jira_id', 'ticket_comments', ['jira_comment_id'], unique=False)
    op.create_index('idx_ticket_comments_author_email', 'ticket_comments', ['author_email'], unique=False)
    op.create_index('idx_ticket_comments_created_at', 'ticket_comments', ['created_at'], unique=False)
    
    # Also add enhanced ADF support columns to tickets table (ADDITIVE - no data loss risk)
    op.add_column('tickets', sa.Column('description_adf', postgresql.JSONB(astext_type=sa.Text()), 
                                      nullable=True,
                                      comment='Rich text description in ADF format'))
    op.add_column('tickets', sa.Column('description_html', sa.Text(), 
                                      nullable=True,
                                      comment='Rendered HTML description for display'))
    
    # ### commands auto generated by Alembic - please adjust! ###
    # Keep agents.organization_id nullable for system agents (title generation agent, etc.)
    op.alter_column('agents', 'organization_id',
               existing_type=sa.UUID(),
               nullable=True,  # System agents can have NULL organization_id
               comment='Organization this agent belongs to (NULL for system agents)',
               existing_comment='Organization this agent belongs to (NULL for system agents)')
    op.alter_column('users', 'role',
               existing_type=postgresql.ENUM('ADMIN', 'MEMBER', name='userrole'),
               server_default=None,
               existing_comment='User role',
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'role',
               existing_type=postgresql.ENUM('ADMIN', 'MEMBER', name='userrole'),
               server_default=sa.text("'MEMBER'::userrole"),
               existing_comment='User role',
               existing_nullable=False)
    op.alter_column('agents', 'organization_id',
               existing_type=sa.UUID(),
               nullable=True,  # Keep nullable on downgrade too
               comment='Organization this agent belongs to (NULL for system agents)',
               existing_comment='Organization this agent belongs to')
    # ### end Alembic commands ###
    
    # Remove enhanced ADF support columns from tickets table
    op.drop_column('tickets', 'description_html')
    op.drop_column('tickets', 'description_adf')
    
    # Drop indexes for ticket_comments table
    op.drop_index('idx_ticket_comments_created_at', table_name='ticket_comments')
    op.drop_index('idx_ticket_comments_author_email', table_name='ticket_comments')
    op.drop_index('idx_ticket_comments_jira_id', table_name='ticket_comments')
    op.drop_index('idx_ticket_comments_ticket_id', table_name='ticket_comments')
    
    # Drop ticket_comments table (includes all BaseModel fields)
    op.drop_table('ticket_comments')