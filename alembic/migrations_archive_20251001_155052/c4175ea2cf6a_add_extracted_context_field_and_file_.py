"""Add extracted_context field and file_ids array to files and tickets

Revision ID: c4175ea2cf6a
Revises: 5231d130ac17
Create Date: 2025-09-15 20:52:33.558312

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c4175ea2cf6a'
down_revision = '5231d130ac17'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Skip the agents.organization_id change - system agents should have NULL organization_id
    # op.alter_column('agents', 'organization_id',
    #            existing_type=sa.UUID(),
    #            nullable=False,
    #            comment='Organization this agent belongs to',
    #            existing_comment='Organization this agent belongs to (NULL for system agents)')
    
    op.alter_column('agents', 'has_custom_avatar',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_comment='Whether agent has a custom uploaded avatar',
               existing_nullable=False)
    op.create_unique_constraint(None, 'agents', ['id'])
    op.create_unique_constraint(None, 'api_tokens', ['id'])
    
    # Add File model changes
    # First add organization_id as nullable, then update existing records, then make it NOT NULL
    op.add_column('files', sa.Column('organization_id', sa.UUID(), nullable=True, comment='Organization that owns this file'))
    
    # Set a default organization_id for existing files (if any exist)
    # In a production system, you'd want to map files to proper organizations
    op.execute("UPDATE files SET organization_id = (SELECT id FROM organizations LIMIT 1) WHERE organization_id IS NULL")
    
    # Now make it NOT NULL
    op.alter_column('files', 'organization_id', nullable=False)
    
    op.add_column('files', sa.Column('extracted_context', sa.JSON(), nullable=True, comment='Unified JSON structure for all content types (document, image, audio)'))
    op.add_column('files', sa.Column('extraction_method', sa.String(length=50), nullable=True, comment='Method used for extraction (document_parser, vision_ocr, speech_transcription)'))
    op.drop_column('files', 'ticket_id')
    op.create_index('idx_files_organization_id', 'files', ['organization_id'])
    # Skip the JSON GIN index for now - can be added later with proper JSONB setup
    # op.create_index('idx_files_extracted_context', 'files', ['extracted_context'], postgresql_using='gin')
    
    # Add Ticket model changes  
    op.add_column('tickets', sa.Column('file_ids', sa.JSON(), nullable=True, comment='Array of file IDs associated with this ticket'))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Reverse Ticket changes
    op.drop_column('tickets', 'file_ids')
    
    # Reverse File changes
    # op.drop_index('idx_files_extracted_context', 'files')  # Skip since we didn't create it
    op.drop_index('idx_files_organization_id', 'files')
    op.add_column('files', sa.Column('ticket_id', sa.UUID(), nullable=True))
    op.drop_column('files', 'extraction_method')
    op.drop_column('files', 'extracted_context')
    op.drop_column('files', 'organization_id')
    
    op.drop_constraint(None, 'api_tokens', type_='unique')
    op.drop_constraint(None, 'agents', type_='unique')
    op.alter_column('agents', 'has_custom_avatar',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_comment='Whether agent has a custom uploaded avatar',
               existing_nullable=False)
    # Skip the agents.organization_id rollback - it should remain nullable
    # op.alter_column('agents', 'organization_id',
    #            existing_type=sa.UUID(),
    #            nullable=True,
    #            comment='Organization this agent belongs to (NULL for system agents)',
    #            existing_comment='Organization this agent belongs to')
    # ### end Alembic commands ###